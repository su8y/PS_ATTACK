class Solution {
public:
    /*
    $N = 10000$ 이므로 N^2 해도 1e8 이다 . 1e9 까지 1초라고 가정을 한다면 충분한 시간 복잡도 이다 .
    단순한 접근으로 해결했다. 어떤 중복되지 않은 문자열을 찾는 것 이기 때문에
    */
    int lengthOfLongestSubstring(string s){
        int len = s.size();
        if(s.size() == 1) return 1;

        int ret = 0;
        for(int i=0;i<len;i++){
            set<char> nameSet;
            for(int j=i;j<len;j++){
                /* not conatins */
                bool isNotConatins = nameSet.find(s[j]) == nameSet.end();
                if(isNotConatins){
                    nameSet.insert(s[j]);
                }else{
                    break;
                }
            }
            ret = max(ret, (int) nameSet.size());
        }

        return ret;
    }
};
